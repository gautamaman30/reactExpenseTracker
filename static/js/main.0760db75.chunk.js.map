{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/Expense.js","components/ListTransactions.js","components/Transaction.js","components/NewTransactions.js","App.js","index.js"],"names":["Header","state","action","type","transactions","payload","filter","t","id","initialState","text","amount","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","transaction","Balance","total","useContext","reduce","sum","item","toFixed","sign","Math","abs","Expense","income","expense","className","ListTransaction","props","onClick","TransactionList","map","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0760db75.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Header = () => {\r\n  return(\r\n    <h2>Expense Tracker</h2>\r\n  );\r\n};\r\n","export default (state, action) => {\r\n  switch(action.type){\r\n    case 'ADD_T':\r\n      return{\r\n        transactions: [action.payload, ...state.transactions]\r\n      }\r\n    case 'DELETE_T':\r\n      return{\r\n        transactions: state.transactions.filter(t => t.id !== action.payload)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\nconst initialState = {\r\n  transactions: [\r\n    {id: 1, text: 'Flower', amount: -20 },\r\n    { id: 2, text: 'Salary', amount: -300 },\r\n    { id: 3, text: 'Book', amount: -10 },\r\n    { id: 4, text: 'Camera', amount: 150 },\r\n  ]\r\n}\r\n\r\n//context api provides a way to create global variables\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//provider component to wrap components as children\r\nexport const GlobalProvider = ({children}) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  //Action\r\n  function deleteTransaction(id){\r\n    dispatch({\r\n      type: 'DELETE_T',\r\n      payload: id,\r\n    });\r\n  }\r\n\r\n  function addTransaction(transaction){\r\n    dispatch({\r\n      type: 'ADD_T',\r\n      payload: transaction,\r\n    });\r\n  }\r\n\r\n  return(\r\n    <GlobalContext.Provider value={{transactions: state.transactions, deleteTransaction, addTransaction}}>{children}\r\n    </GlobalContext.Provider>\r\n  );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\n\r\nexport const Balance = () => {\r\n  const {transactions} = useContext(GlobalContext);\r\n  const total = transactions.reduce((sum, item) => sum + item.amount, 0).toFixed(2);\r\n  const sign = total < 0?'-':'';\r\n\r\n  return(\r\n    <>\r\n      <h4>Your Balance</h4>\r\n      <h1>{sign}${Math.abs(total)}</h1>\r\n    </>\r\n  );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\n\r\nexport const Expense = () => {\r\n  const { transactions} = useContext(GlobalContext);\r\n  const income = transactions.reduce((sum, item) => sum + (item.amount > 0?item.amount: 0), 0).toFixed(2);\r\n  const expense = transactions.reduce((sum, item) => sum + (item.amount < 0?item.amount: 0), 0).toFixed(2)*-1;\r\n\r\n\r\n  return(\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p className=\"money plus\">${income}</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p className=\"money minus\">${expense}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\n\r\nexport const ListTransaction = (props) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n  const sign = props.transaction.amount < 0 ? '-':'+';\r\n\r\n  return(\r\n    <li className={props.transaction.amount < 0 ? 'minus':'plus'}>\r\n      {props.transaction.text}<span>{sign}${Math.abs(props.transaction.amount)}</span>\r\n      <button onClick={() => deleteTransaction(props.transaction.id)} className=\"delete-btn\">x</button>\r\n    </li>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { ListTransaction } from './ListTransactions';\r\n\r\n\r\nexport const TransactionList = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  return(\r\n    <>\r\n      <h3>History</h3>\r\n      <ul className=\"list\">\r\n        {transactions.map( transaction => (<ListTransaction transaction={transaction}/>))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\n\r\nexport const AddTransaction = () => {\r\n  const {addTransaction} = useContext(GlobalContext);\r\n  //creating states using hooks [name, function for its functionality],\r\n  //useState(default value)\r\n  const [text, setText] = useState('');\r\n  const [amount, setAmount] = useState(0);\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    if(text !== '') addTransaction({id:Math.floor(Math.random()*10000000), text, amount: +amount});\r\n  };\r\n\r\n  return(\r\n    <>\r\n      <h3>Add new transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)}\r\n          placeholder=\"Enter text....\" />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\">Amount <br/>(negative - expense, positive - income)</label>\r\n          <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)}\r\n          placeholder=\"Enter amount....\"/>\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { Expense } from './components/Expense';\nimport { TransactionList } from './components/Transaction';\nimport { AddTransaction } from './components/NewTransactions';\nimport { GlobalProvider } from './context/GlobalState';\n\n\nfunction App() {\n  return (\n    <div className=\"bigContainer\">\n      <GlobalProvider>\n        <Header />\n        <div className=\"container\">\n          <Balance />\n          <Expense />\n          <TransactionList />\n          <AddTransaction />\n        </div>\n      </GlobalProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}